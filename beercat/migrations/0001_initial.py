# Generated by Django 3.0.5 on 2020-05-16 11:35

import beercat.models.datefield
import beercat.models.event
import beercat.models.mdfield
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brewery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name_plural': 'Breweries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BreweryEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.IntegerField(choices=[(1, 'Start'), (2, 'End'), (3, 'Auction'), (4, 'Move'), (5, 'Remodel'), (6, 'Sold'), (7, 'Merge')])),
                ('date', beercat.models.datefield.FlexDateField(blank=True, max_length=11, null=True)),
                ('details', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('brewery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='beercat.Brewery')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_beercat.breweryevent_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=(beercat.models.event.EventMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('synonyms', models.CharField(blank=True, max_length=255, null=True, verbose_name='Synonyms')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('surname', models.CharField(max_length=50, verbose_name='Surname')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('gender', models.IntegerField(choices=[(0, 'male'), (1, 'female')])),
            ],
            options={
                'ordering': ['surname'],
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('abbr', models.CharField(max_length=3, unique=True, verbose_name='Abbrevation')),
                ('synonyms', models.CharField(blank=True, max_length=255, null=True, verbose_name='Synonyms')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('synonyms', models.CharField(blank=True, max_length=255, null=True, verbose_name='Synonyms')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.IntegerField(choices=[(0, 'Onbekend'), (1, 'Brouwer'), (2, 'Brouwknecht'), (3, 'Directeur'), (4, 'Commissaris'), (5, 'Eigenaar'), (6, 'Secretaris'), (7, 'Adviseur')])),
                ('from_date', beercat.models.datefield.FlexDateField(blank=True, max_length=11, null=True)),
                ('to_date', beercat.models.datefield.FlexDateField(blank=True, max_length=11, null=True)),
                ('details', beercat.models.mdfield.MDField(blank=True, null=True, verbose_name='Details')),
                ('status', models.IntegerField(choices=[(1, 'fact'), (2, 'assumption')], default=1)),
                ('brewery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='beercat.Brewery')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='beercat.Person')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.IntegerField(choices=[(0, 'ongespecificeerd'), (1, 'vader van'), (-1, 'zoon van'), (2, 'man van'), (-2, 'vrouw van'), (3, 'broer van'), (4, 'zus van'), (5, 'aangetrouwd'), (6, 'zwager van')])),
                ('details', models.TextField(blank=True, null=True, verbose_name='Details')),
                ('status', models.IntegerField(choices=[(1, 'fact'), (2, 'assumption')], default=1)),
                ('obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='obj', to='beercat.Person')),
                ('subj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subj', to='beercat.Person')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PersonEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.IntegerField(choices=[(1, 'Birth'), (2, 'Death'), (3, 'Move'), (4, 'End brewing career')])),
                ('date', beercat.models.datefield.FlexDateField(blank=True, max_length=11, null=True)),
                ('details', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='beercat.Location')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='beercat.Person')),
            ],
            options={
                'ordering': ['date'],
            },
            bases=(beercat.models.event.EventMixin, models.Model),
        ),
        migrations.AddField(
            model_name='location',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='beercat.Province'),
        ),
        migrations.CreateModel(
            name='BreweryStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started', beercat.models.datefield.FlexDateField(blank=True, max_length=11, null=True)),
                ('stopped', beercat.models.datefield.FlexDateField(blank=True, max_length=11, null=True)),
                ('brewery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='beercat.Brewery')),
                ('style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='beercat.Style')),
            ],
        ),
        migrations.AddField(
            model_name='brewery',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='beercat.Location'),
        ),
        migrations.AddField(
            model_name='brewery',
            name='style',
            field=models.ManyToManyField(through='beercat.BreweryStyle', to='beercat.Style'),
        ),
        migrations.CreateModel(
            name='BreweryMerge',
            fields=[
                ('breweryevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='beercat.BreweryEvent')),
                ('into_brewery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='into', to='beercat.Brewery')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('beercat.breweryevent',),
        ),
    ]
